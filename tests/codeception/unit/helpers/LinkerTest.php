<?php

namespace unit\helpers;

use skewer\components\design\Design;
use skewer\helpers\Linker;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-03-21 at 12:43:29.
 */
class LinkerTest extends \Codeception\Test\Unit
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @covers \Linker::init
     * @covers \Linker::__construct
     */
    protected function setUp()
    {
        Design::setLastUpdatedTime(null);
    }

    /**
     * @covers \skewer\helpers\Linker::addJsFile
     * @covers \skewer\helpers\Linker::getJsFiles
     * @covers \skewer\helpers\Linker::clearJsFiles
     */
    public function testJS()
    {
        // очистить
        Linker::clearJsFiles();

        // проверить, что пусто
        $this->assertEmpty(Linker::getJsFiles());

        $this->assertTrue(Linker::addJsFile('/js/file4.js'));
        $this->assertTrue(Linker::addJsFile('/js/file4.js'));

        $this->assertTrue(Linker::addJsFile('/skewer/build/js/overlay1.js'));

        // и не парвильные тоже
        $this->assertFalse(Linker::addJsFile(''));

        // проверить соответствие
        $this->assertSame(
            [
                '/js/file4.js',
                '/skewer/build/js/overlay1.js',
            ],
            Linker::getJsFiles()
        );

        // очистить
        Linker::clearJsFiles();

        // проверить, что пусто
        $this->assertEmpty(Linker::getJsFiles());
    }

    /**
     * @covers \skewer\helpers\Linker::addCssFile
     * @covers \skewer\helpers\Linker::getCssFiles
     * @covers \skewer\helpers\Linker::clearCssFiles
     */
    public function testCSS()
    {
        // очистить
        Linker::clearCssFiles();

        // проверить, что пусто
        $this->assertEmpty(Linker::getCssFiles());

        $this->assertTrue(Linker::addCssFile('/css/file4.css'));
        $this->assertTrue(Linker::addCssFile('/css/file4.css'));

        // и не парвильные тоже
        $this->assertFalse(Linker::addCssFile(''));

        $this->assertTrue(Linker::addCssFile('/css/file8.css'));

        // проверить соответствие
        $this->assertSame(
            [
                '/css/file4.css',
                '/css/file8.css',
            ],
            Linker::getCssFiles()
        );

        // очистить
        Linker::clearCssFiles();

        // проверить, что пусто
        $this->assertEmpty(Linker::getCssFiles());
    }
}
