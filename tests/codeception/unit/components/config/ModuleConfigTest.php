<?php

namespace unit\components\config;

use skewer\base\site\Layer;
use skewer\components\config\ModuleConfig;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2013-03-15 at 14:17:00.
 */
class ModuleConfigTest extends \Codeception\Test\Unit
{
    /**
     * Отдает инициализационные данные.
     */
    private function getInitData()
    {
        return [
            ModuleConfig::NAME => 'TestModule',
            ModuleConfig::TITLE => 'Название',
            ModuleConfig::DESCRIPTION => 'Описание',
            ModuleConfig::VERSION => '0001',
            ModuleConfig::REVISION => '0245',
            ModuleConfig::LAYER => Layer::ADM,
            'add_val' => '546789',
        ];
    }

    /**
     * Отдает данные которые должны быть после установки модуля.
     *
     * @return array
     */
    private function getSuccessData()
    {
        return [
            ModuleConfig::NAME => 'TestModule',
            ModuleConfig::TITLE => 'Название',
            ModuleConfig::VERSION => '0001',
            ModuleConfig::REVISION => '0245',
            ModuleConfig::LAYER => Layer::ADM,
            'add_val' => '546789',
        ];
    }

    /**
     * Отдает набор неверных данных для инициализации.
     */
    public function getWrongInitData()
    {
        $aExclude = [
            ModuleConfig::NAME,
            ModuleConfig::TITLE,
            ModuleConfig::VERSION,
            ModuleConfig::REVISION,
            ModuleConfig::LAYER,
        ];

        $aOut = [
            ['asd', 'неверный тип инициализационного массива прошел'],
        ];

        foreach ($aExclude as $sName) {
            $aData = $this->getSuccessData();
            unset($aData[$sName]);
            $aOut[] = [
                $aData,
                "Прошло создание без поля [{$sName}]",
            ];
        }

        return $aOut;
    }

    /**
     * @covers  \skewer\components\config\ModuleConfig::__construct
     * @dataProvider getWrongInitData
     *
     * @param $sData
     * @param $sExcText
     *
     * @throws \PHPUnit_Framework_AssertionFailedError
     */
    public function testCreateFail($sData, $sExcText)
    {
        $this->expectException(\skewer\components\config\Exception::class);

        new ModuleConfig($sData);
        $this->fail($sExcText);
    }

    /**
     * @covers \skewer\components\config\ModuleConfig
     */
    public function testGet()
    {
        $oConfig = new ModuleConfig($this->getInitData());

        $this->assertSame('TestModule', $oConfig->getName());
        $this->assertSame('Название', $oConfig->getTitle());
        $this->assertSame('Описание', $oConfig->getDescription());
        $this->assertSame('0001', $oConfig->getVersion());
        $this->assertSame('0245', $oConfig->getRevision());
        $this->assertSame(Layer::ADM, $oConfig->getLayer());

        $this->assertSame(
            $this->getInitData(),
            $oConfig->getData(),
            'не совпадает набор переданных и полученных полей'
        );
    }
}
